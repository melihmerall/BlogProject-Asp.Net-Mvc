@model Entity.Concrete.Blog
@{
    ViewBag.Title = "UpdateBlog";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}
<script src="~/Themes/ckEditorText/ckeditor.js"></script>
<h2>UpdateBlog</h2>

<form class="" method="post" >
    @*@Html.TextBoxFor(x => x.BlogRating, new { @class = "form-control", type = "hidden" })*@
    @Html.TextBoxFor(x => x.BlogId, new { @class = "form-control", type = "hidden" })
    @Html.Label("Blog Title")
    @Html.TextBoxFor(x => x.BlogTitle, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogTitle, "", new { @class = "text-danger" })
    <br />

    @Html.TextBoxFor(x => x.BlogRating, new { @class = "form-control", type = "hidden" })
    <br />
    @Html.Label("Blog Category")
    @Html.DropDownListFor(x => x.CategoryId, (List<SelectListItem>)ViewBag.values, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.CategoryId, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Image")
        @Html.TextBoxFor(x => x.BlogImage, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.BlogImage)

    
    @*<input type="file" name="BlogImage" value="@ViewBag.blogImage" />*@
    @Html.ValidationMessageFor(x => x.BlogImage, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Blog Url For Seo")
    @Html.TextBoxFor(x => x.BlogUrl, new { @class = "form-control", @placeholder = "Example: what-is-the-software" })
    @Html.ValidationMessageFor(x => x.BlogUrl, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Date")
    @Html.TextBoxFor(x => x.BlogDate, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogDate, "", new { @class = "text-danger" })
    <br />

    @Html.TextBoxFor(x => x.BlogStatus, new { @class = "form-control", @type = "hidden" })
    <br />
    @Html.Label("Author")
    @Html.DropDownListFor(x => x.AuthorId, (List<SelectListItem>)ViewBag.values2, new { @class = "form-control" })
    <br />
    @Html.Label("Content")
    <div class="col-md-10">


        @Html.TextAreaFor(x => x.BlogContent, new { @id = "editor", @class = "form-control", @rows = "200" })
        @Html.ValidationMessageFor(x => x.BlogContent, "", new { @class = "text-danger" })
        <script>

            CKEDITOR.replace('editor')




        </script>

    </div>

    <br />
    <button class="btn btn-info">Save</button>
</form>
